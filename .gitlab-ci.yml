variables:
  DOCKER_DRIVER: overlay2

image: trion/ng-cli-karma:8.3.25

stages:
  - build
  - migrate
  - deploy
  - test

.ssh:
  before_script:
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  - echo "$KEY_STAGING" > ~/.ssh/id_rsa
  - chmod 600 ~/.ssh/id_rsa

.runner_tags:
  tags:
  - docker
  - linux

test-client-e2e:
  stage: test
  image: trion/ng-cli-e2e:7.0.5
  retry: 2
  allow_failure: false
  dependencies:
    - build-server
  needs:
    - build-server
    - build-client
  services:
    - postgres:latest
  before_script:
    - apt update
    - apt install -y postgresql-client
    - env PGPASSWORD=todo-app psql -h postgres -U todo-app -w todo-app
  variables:
    POSTGRES_DB: todo-app
    POSTGRES_USER: todo-app
    POSTGRES_PASSWORD: "todo-app"
  script:
    - cd server/
    - rm -rf config.json
    - rm -rf node_modules/
    - echo $config_test > config.json
    - echo $ormconfig_test > ormconfig.json
    - npm install
    - npm run migrate:run
    - cd ../todo-app
    - npm run test:e2e-ci
  tags:
    - docker

build-client:
  extends:
    - .runner_tags
  stage: build
  script:
    - cd todo-app/
    - rm -rf node_modules/
    - npm install
    - npm run build:$ANGULAR_ENVIRONMENT
    - ls
    - cd ../..
  artifacts:
    paths:
      - todo-app/dist/
    name: "Build Todo-App"
    expire_in: 1 week
    when: on_success

build-server:
  extends:
    - .runner_tags
  stage: build
  script:
    - cd server/
    - rm -rf node_modules/
    - npm install
    - npm run build
    - ls
    - cd ../..
  artifacts:
    paths:
      - server/dist/
    name: "Build Server"
    expire_in: 1 week
    when: on_success

migrate-db:
  extends:
    - .ssh
    - .runner_tags
  stage: migrate
  image: kroniak/ssh-client
  script:
    - cd server/
    - ls
    - rm -rf ormconfig.json
    - echo $ormconfig > ormconfig.json
    - ssh deploy@w11k.de rm -rf /srv/www/vhosts/$VHOST_PATH/api/
    - ssh deploy@w11k.de mkdir -p /srv/www/vhosts/$VHOST_PATH/api/
    - scp -r package.json deploy@w11k.de:/srv/www/vhosts/$VHOST_PATH/api/
    - scp -r ormconfig.json deploy@w11k.de:/srv/www/vhosts/$VHOST_PATH/api/
    - scp -r tsconfig.json deploy@w11k.de:/srv/www/vhosts/$VHOST_PATH/api/
    - scp -r src/ deploy@w11k.de:/srv/www/vhosts/$VHOST_PATH/api/
    - ssh deploy@w11k.de "curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.0/install.sh | bash; . ~/.nvm/nvm.sh; nvm --version; nvm use 10.9.0; cd /srv/www/vhosts/$VHOST_PATH/api/; npm install; npm run migrate:run"
  dependencies:
    - build-server
  needs:
    - build-server
  environment:
    name: $ANGULAR_ENVIRONMENT
#  when: manual
  only:
    - master

deploy-client:
  extends:
    - .ssh
    - .runner_tags
  stage: deploy
  image: kroniak/ssh-client
  script:
    - cd todo-app
    - scp -r dist/todo-app/* deploy@w11k.de:/srv/www/vhosts/$VHOST_PATH/
  dependencies:
    - build-client
  needs:
    - build-client
#  when: manual
  only:
    - master
  environment:
    name: $ANGULAR_ENVIRONMENT
    url: https://todo-app.w11k.de

deploy-server:
  extends:
    - .ssh
    - .runner_tags
  stage: deploy
  image: kroniak/ssh-client
  script:
    - cd server/
    - echo $config > config.json
    - ssh deploy@w11k.de mkdir -p /srv/www/vhosts/$VHOST_PATH/api/
    - scp -r dist/src/* deploy@w11k.de:/srv/www/vhosts/$VHOST_PATH/api/
    - scp -r package.json deploy@w11k.de:/srv/www/vhosts/$VHOST_PATH/api/
    - ssh deploy@w11k.de "curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.0/install.sh | bash; . ~/.nvm/nvm.sh; nvm --version; nvm use 10.9.0; cd /srv/www/vhosts/$VHOST_PATH/api/; rm -rf node_modules; npm install"
    - scp -r config.json deploy@w11k.de:/srv/www/vhosts/$VHOST_PATH/api/
    - ssh deploy@w11k.de chmod 644 /srv/www/vhosts/$VHOST_PATH/api/config.json
    - ssh deploy@w11k.de sudo supervisorctl restart $SERVER_SERVICE
  after_script:
    - ls
  environment:
    name: $ANGULAR_ENVIRONMENT
  dependencies:
    - build-server
  needs:
    - build-server
    - migrate-db
#  when: manual
  only:
    - master
